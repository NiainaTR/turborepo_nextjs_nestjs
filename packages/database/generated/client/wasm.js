
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.NofiticationsScalarFieldEnum = {
  notification_id: 'notification_id',
  sender_name: 'sender_name',
  receiver_name: 'receiver_name',
  content: 'content',
  date: 'date'
};

exports.Prisma.UsersScalarFieldEnum = {
  user_id: 'user_id',
  bio: 'bio',
  email: 'email',
  name: 'name',
  password: 'password',
  gender: 'gender',
  created_at: 'created_at',
  stars: 'stars',
  profile_photo_url: 'profile_photo_url',
  cover_photo_url: 'cover_photo_url',
  user_account_type: 'user_account_type'
};

exports.Prisma.SessionsScalarFieldEnum = {
  session_id: 'session_id',
  session_token: 'session_token',
  ip_addr: 'ip_addr',
  user_agent: 'user_agent',
  session_user_id: 'session_user_id'
};

exports.Prisma.Post_categoriesScalarFieldEnum = {
  category_id: 'category_id',
  category_value: 'category_value',
  parent_category_id: 'parent_category_id'
};

exports.Prisma.PostsScalarFieldEnum = {
  post_id: 'post_id',
  title: 'title',
  description: 'description',
  price: 'price',
  created_at: 'created_at',
  post_category_id: 'post_category_id',
  author_id: 'author_id'
};

exports.Prisma.Users_saved_postsScalarFieldEnum = {
  post_saving_id: 'post_saving_id',
  saved_at: 'saved_at',
  user_saving_id: 'user_saving_id',
  saved_post_id: 'saved_post_id'
};

exports.Prisma.CommentsScalarFieldEnum = {
  comment_id: 'comment_id',
  body: 'body',
  created_at: 'created_at',
  commentator_id: 'commentator_id',
  commented_post_id: 'commented_post_id',
  parent_comment_id: 'parent_comment_id'
};

exports.Prisma.MediasScalarFieldEnum = {
  media_id: 'media_id',
  fileType: 'fileType',
  encoding: 'encoding',
  mimetype: 'mimetype',
  filename: 'filename',
  fileUrl: 'fileUrl',
  path: 'path',
  size: 'size',
  media_post_id: 'media_post_id'
};

exports.Prisma.AttachmentsScalarFieldEnum = {
  attachment_id: 'attachment_id',
  message_id: 'message_id',
  file_url: 'file_url',
  file_type: 'file_type',
  created_at: 'created_at'
};

exports.Prisma.ConversationsScalarFieldEnum = {
  conversation_id: 'conversation_id',
  conversation_type: 'conversation_type',
  conversation_name: 'conversation_name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  product_id: 'product_id'
};

exports.Prisma.MessagesScalarFieldEnum = {
  message_id: 'message_id',
  conversation_id: 'conversation_id',
  response_id: 'response_id',
  sender_id: 'sender_id',
  recipient_id: 'recipient_id',
  message_status: 'message_status',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.gender_enum = exports.$Enums.gender_enum = {
  male: 'male',
  female: 'female'
};

exports.account_type = exports.$Enums.account_type = {
  pro: 'pro',
  standard: 'standard'
};

exports.file_type_enum = exports.$Enums.file_type_enum = {
  image: 'image',
  video: 'video',
  audio: 'audio'
};

exports.conversation_type_enum = exports.$Enums.conversation_type_enum = {
  group: 'group',
  one_to_one: 'one_to_one',
  broadcast: 'broadcast'
};

exports.message_status_enum = exports.$Enums.message_status_enum = {
  sent: 'sent',
  delivered: 'delivered',
  read: 'read',
  failed: 'failed'
};

exports.Prisma.ModelName = {
  nofitications: 'nofitications',
  users: 'users',
  sessions: 'sessions',
  post_categories: 'post_categories',
  posts: 'posts',
  users_saved_posts: 'users_saved_posts',
  comments: 'comments',
  medias: 'medias',
  attachments: 'attachments',
  conversations: 'conversations',
  messages: 'messages'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
